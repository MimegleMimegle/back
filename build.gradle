buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'org.springframework.boot' version '2.5.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10" // queryDSL (1)
    id 'java'
}

group = 'com.teamproj'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'mysql:mysql-connector-java'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // 스프링 시큐리티
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    implementation 'commons-codec:commons-codec:1.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.2'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.2'
    implementation 'com.auth0:java-jwt:3.13.0'

    // Swagger
    implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'
    implementation group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'

    //querydsl 추가
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    implementation "com.querydsl:querydsl-apt:${queryDslVersion}"
    implementation "com.querydsl:querydsl-core:${queryDslVersion}"

    // 테스트 코드를 위한 Lombok 라이브러리
    testCompileOnly 'org.projectlombok:lombok:1.18.22'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.22'

    // 스프링 부트 테스트를 위한 라이브러리
    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.5.6'

    // 스프링 시큐리티 테스트를 위한 라이브러리
    testImplementation 'org.springframework.security:spring-security-test'

    // Amazon S3
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.0.1.RELEASE'

    // Redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
}

test {
//    exclude '**/*'
    useJUnitPlatform()
}

def querydslDir = "$buildDir/generated/querydsl" // queryDSL (3)

querydsl { // queryDSL (4)
    jpa = true
    querydslSourcesDir = querydslDir
}

sourceSets { // queryDSL (5)
    main.java.srcDir querydslDir
}

compileQuerydsl { // queryDSL (7)
    options.annotationProcessorPath = configurations.querydsl
}

configurations { // queryDSL (6)
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
}



